// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String

  orders Order[]

  createdAt DateTime @default(now())
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String
  status      ProductStatus
  price       Int
  images      String[]
  category    String
  isFeatured  Boolean       @default(false)

  createdAt DateTime @default(now())
  Order     Order?   @relation(fields: [orderId], references: [id])
  orderId   String?
}

model Banner {
  id          String @id @default(uuid())
  title       String
  imageString String

  createdAt DateTime @default(now())
}

model Order {
  id     String  @id @default(uuid())
  status String  @default("pending")
  amount Int
  paid   Boolean @default(false)

  products String[]

  productsList Product[]

  firstName String?
  lastName  String?

  address    String?
  city       String?
  appartment String?
  state      String?
  zip        String?

  shippingMethod ShippingMethod @default(BOX)

  paymentMethod PaymentMethod @default(Stripe)

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  createdAt DateTime @default(now())
}

enum PaymentMethod {
  Stripe
}

enum ShippingMethod {
  BOX
}

enum ProductStatus {
  draft
  published
  archived
}

model Category {
  id        String   @id @default(uuid())
  name      String
  title     String
  image     String   @default("https://via.placeholder.com/150")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)

  parentId      String? // Optional field for parent category
  parent        Category?  @relation("Subcategories", fields: [parentId], references: [id])
  subcategories Category[] @relation("Subcategories")

  @@index([parentId])
}
